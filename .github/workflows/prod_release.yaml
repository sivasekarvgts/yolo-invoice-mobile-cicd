name: Yolo Invoice Production Release Build 

on:
  pull_request:
    branches:
      - main
    types:
      - closed

env:
  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}

jobs:
  release-android:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    name: 🤖 Release Android

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: ☕️ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: gradle
     
      - name: 📦 Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-      

      - name: 🏗 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.29.3
      
      - name: 🪪 Accept Android Licenses
        run: yes | flutter doctor --android-licenses

      - name: 🔐 Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > ${{ github.workspace }}/android/app/yolo-work.jks
          ls -lh ${{ github.workspace }}/android/app/yolo-work.jks

      - name: 🧹 Clean & Reset Pub Cache
        run: |
          flutter clean
          rm -rf ~/.pub-cache
          flutter pub get
      
      - name: ​​👨‍⚕️ Flutter Doctor
        run: flutter doctor -v

      - name: 🐦 Setup Shorebird
        uses: shorebirdtech/setup-shorebird@v1
        with:
          cache: true

      - name: 🚀 Shorebird Release
        id: shorebird-release
        run: |
          shorebird release android --flutter-version 3.29.3 --flavor prod --verbose 

      - name: 📦 Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-prod-release.aab
          path: build/app/outputs/bundle/prodRelease/app-prod-release.aab

      - name: 🛠 Debug AAB Path
        run: ls -R build/app/outputs/bundle/

      - name: 🚀 Install Fastlane & Required Plugins
        run: |
          sudo gem install fastlane
          export PATH="$HOME/.local/share/gem/ruby/3.2.0/bin:$PATH"
          gem install fastlane-plugin-firebase_app_distribution --user-install   

      - name: 🔐 Create Google Play JSON Key File
        run: |
          echo '${{ secrets.GOOGLE_PLAY_JSON }}' > ${{ github.workspace }}/google_play_key.json
          ls -lh ${{ github.workspace }}/google_play_key.json 

      - name: 📤 Upload to Google Play Store
        run: |
          cd android
          fastlane deploy_prod